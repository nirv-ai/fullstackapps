#!/usr/bin/env bash

# @see https://www.postgresql.org/docs/current/app-psql.html

set -e

USE_SCHEMA="${USE_SCHEMA:-$DEFAULT_DB}"
USE_DB="${USE_DB:-$DEFAULT_DB}"
R_ROLE=${R_ROLE}
RW_ROLE=${RW_ROLE}
VAULT_U=${VAULT_U}
VAULT_P=${VAULT_P}

psql -b --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
	REVOKE CREATE ON SCHEMA public FROM PUBLIC;

	CREATE DATABASE $USE_DB WITH OWNER $POSTGRES_USER;
	\connect $USE_DB
	CREATE SCHEMA IF NOT EXISTS $USE_SCHEMA;
	REVOKE ALL ON DATABASE $USE_DB FROM PUBLIC;

	CREATE ROLE ${R_ROLE} NOINHERIT;
	GRANT USAGE ON SCHEMA $USE_SCHEMA TO ${R_ROLE};
	GRANT CONNECT ON DATABASE $USE_DB TO ${R_ROLE};
	GRANT SELECT ON ALL TABLES IN SCHEMA $USE_SCHEMA TO ${R_ROLE};
	ALTER DEFAULT PRIVILEGES IN SCHEMA $USE_SCHEMA GRANT SELECT ON TABLES TO ${R_ROLE};

	CREATE ROLE ${RW_ROLE} NOINHERIT;
	GRANT USAGE ON SCHEMA $USE_SCHEMA TO ${RW_ROLE};
	GRANT USAGE, CREATE ON SCHEMA $USE_SCHEMA TO ${RW_ROLE};
	GRANT CONNECT ON DATABASE $USE_DB TO ${RW_ROLE};
	GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA $USE_SCHEMA TO ${RW_ROLE};
	ALTER DEFAULT PRIVILEGES IN SCHEMA $USE_SCHEMA GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO ${RW_ROLE};
	GRANT USAGE ON ALL SEQUENCES IN SCHEMA $USE_SCHEMA TO ${RW_ROLE};
	ALTER DEFAULT PRIVILEGES IN SCHEMA $USE_SCHEMA GRANT USAGE ON SEQUENCES TO ${RW_ROLE};
	grant execute on all functions in schema $USE_SCHEMA to ${RW_ROLE};


	BEGIN;
		SET LOCAL log_statement = 'none';
		CREATE ROLE $DEFAULT_DB_USER WITH PASSWORD '$DEFAULT_DB_USER_PW' LOGIN INHERIT
			IN ROLE ${R_ROLE};

		CREATE ROLE $DEFAULT_DB_ADMIN WITH PASSWORD '$DEFAULT_DB_ADMIN_PW' LOGIN INHERIT
			IN ROLE ${RW_ROLE};

		CREATE ROLE $VAULT_U WITH PASSWORD '$VAULT_P' LOGIN SUPERUSER;
	COMMIT;

	GRANT ALL PRIVILEGES ON DATABASE $USE_DB TO $POSTGRES_USER;
EOSQL
